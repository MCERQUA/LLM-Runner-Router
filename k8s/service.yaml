apiVersion: v1
kind: Service
metadata:
  name: llm-runner-router
  namespace: llm-systems
  labels:
    app: llm-runner-router
    component: api
    tier: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "60"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 3000
    protocol: TCP
  - name: websocket
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: llm-runner-router
    component: api
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Adjust for security in production

---
apiVersion: v1
kind: Service
metadata:
  name: llm-runner-router-internal
  namespace: llm-systems
  labels:
    app: llm-runner-router
    component: api
    tier: backend
    access: internal
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  - name: websocket
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: llm-runner-router
    component: api
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: llm-runner-router-headless
  namespace: llm-systems
  labels:
    app: llm-runner-router
    component: api
    tier: backend
    access: headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  - name: websocket
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: llm-runner-router
    component: api
  publishNotReadyAddresses: false