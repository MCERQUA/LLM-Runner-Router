apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llm-model-cache
  namespace: llm-systems
  labels:
    app: llm-runner-router
    component: storage
    type: model-cache
spec:
  accessModes:
    - ReadWriteMany  # Multiple pods can read/write (requires compatible storage class)
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd  # Adjust based on your storage class
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llm-model-cache-rwo
  namespace: llm-systems
  labels:
    app: llm-runner-router
    component: storage
    type: model-cache-rwo
spec:
  accessModes:
    - ReadWriteOnce  # Single pod read/write (more compatible)
  resources:
    requests:
      storage: 50Gi
  storageClassName: fast-ssd
  volumeMode: Filesystem

---
# Storage class for high-performance model storage
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-ssd
  labels:
    app: llm-runner-router
    component: storage-class
provisioner: kubernetes.io/aws-ebs  # Adjust for your cloud provider
parameters:
  type: gp3  # AWS GP3 for balanced performance
  iops: "3000"
  throughput: "125"
  encrypted: "true"
allowVolumeExpansion: true
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---
# Alternative storage class for slower but cheaper storage
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: standard-ssd
  labels:
    app: llm-runner-router
    component: storage-class
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  encrypted: "true"
allowVolumeExpansion: true
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---
# Persistent Volume for pre-existing model storage (optional)
apiVersion: v1
kind: PersistentVolume
metadata:
  name: llm-models-prebuilt
  labels:
    app: llm-runner-router
    component: storage
    type: prebuilt-models
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: prebuilt-models
  # Adjust based on your storage type
  nfs:
    path: /shared/models
    server: nfs.yourdomain.com
  # Alternative: hostPath for local storage
  # hostPath:
  #   path: /data/models
  #   type: Directory

---
# Storage class for prebuilt models
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: prebuilt-models
  labels:
    app: llm-runner-router
    component: storage-class
provisioner: kubernetes.io/no-provisioner
allowVolumeExpansion: false
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer

---
# PVC for logs and temporary files
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llm-logs-storage
  namespace: llm-systems
  labels:
    app: llm-runner-router
    component: storage
    type: logs
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard-ssd
  volumeMode: Filesystem

---
# PVC for shared cache between pods
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: llm-shared-cache
  namespace: llm-systems
  labels:
    app: llm-runner-router
    component: storage
    type: shared-cache
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
  volumeMode: Filesystem

---
# Volume Snapshot Class for backups
apiVersion: snapshot.storage.k8s.io/v1
kind: VolumeSnapshotClass
metadata:
  name: llm-model-snapshots
  labels:
    app: llm-runner-router
    component: snapshots
driver: ebs.csi.aws.com  # Adjust for your CSI driver
deletionPolicy: Retain
parameters:
  description: "LLM Model Cache Snapshot"