#!/bin/bash
# Post-edit hook - runs after Claude edits files

# Auto-run linting on JavaScript files
if echo "$CLAUDE_EDIT_FILE" | grep "\.js$" > /dev/null; then
    echo "🔍 Running ESLint on edited file..."
    npx eslint "$CLAUDE_EDIT_FILE" --fix 2>/dev/null || echo "❌ Linting failed or not available"
fi

# Run tests if core files were modified
if echo "$CLAUDE_EDIT_FILE" | grep -E "(src/core/|src/engines/|src/loaders/)" > /dev/null; then
    echo "🧪 Core file modified - running relevant tests..."
    
    # Determine test file based on edited file
    TEST_FILE=$(echo "$CLAUDE_EDIT_FILE" | sed 's/src\//tests\//' | sed 's/\.js$/.test.js/')
    
    if [ -f "$TEST_FILE" ]; then
        npm test -- "$TEST_FILE" 2>/dev/null || echo "⚠️ Tests not available or failed"
    else
        echo "📝 No specific test file found, consider creating: $TEST_FILE"
    fi
fi

# Check if editing main entry point
if echo "$CLAUDE_EDIT_FILE" | grep "src/index\.js" > /dev/null; then
    echo "🚀 Main entry point modified - running smoke test..."
    timeout 10s node -e "
        import('./src/index.js').then(() => {
            console.log('✅ Import successful');
            process.exit(0);
        }).catch(err => {
            console.log('❌ Import failed:', err.message);
            process.exit(1);
        });
    " || echo "⚠️ Smoke test failed or timed out"
fi

# Regenerate docs if API files changed
if echo "$CLAUDE_EDIT_FILE" | grep -E "(api/|Router\.js|Pipeline\.js)" > /dev/null; then
    echo "📚 API file modified - consider regenerating docs with: npm run docs"
fi